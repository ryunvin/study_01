@using RVCoreBoard.MVC.Helpers;
@model RVCoreBoard.MVC.Models.BoardListInfoModel
@{
    var category = ViewBag.Category;
    var currentUserLevel = User.Identity.GetRoleLevel();
    ViewData["Title"] = category.Name;
}
@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $('#searchType li').on('click', function () {
            var newVal = $(this).data('value');

            $('#searchDropdown').text($(this).text());
            $('#inputSearchType').val(newVal);
        });
    </script>
}
<div class="d-flex justify-content-center align-items-start position-relative">
    <div class="col-lg-9 card">
        <div class="card-body">
            <div class="row">
                <div class="col-12 mb-3">
                    <div class="bg-transparent shadow-none">
                        <div class="p-2 text-right">
                            @if (currentUserLevel >= (1 << category.Level))
                            {
                                <a class="btn btn-primary" asp-controller="Board" asp-action="Add" asp-route-Id="@category.Id">글쓰기</a>
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="table-responsive">
                <table id="zero_config" class="table table-striped table-bordered no-wrap">
                    <colgroup>
                        <col style="width:100px;" />
                        <col style="width:auto;" />
                        <col style="width:150px;" />
                        <col style="width:150px;" />
                        <col style="width:150px;" />
                    </colgroup>
                    <thead class="text-center">
                        <tr>
                            <th>번호</th>
                            <th>제목</th>
                            <th>글쓴이</th>
                            <th>등록일시</th>
                            <th>조회수</th>
                        </tr>
                    </thead>
                    <tbody class="text-center">
                        @foreach (var board in Model.Data)
                        {
                            <tr>
                                <td>@board.BNo</td>
                                <td class="text-left">
                                    <a asp-controller="Board" asp-action="Detail" asp-route-BNo="@board.BNo" asp-route-currentPage="@ViewBag.CurrentPage" asp-route-searchType="@ViewBag.SearchType"
                                        asp-route-searchString="@ViewBag.SearchString" name="board_title">@board.Title</a>
                                </td>
                                <td>@board.user.Name</td>
                                @if (board.Reg_Date.ToString("yyyy-MM-dd").Equals(DateTime.Today.ToString("yyyy-MM-dd")))
                                {
                                    <td>@board.Reg_Date.ToString("HH:mm")</td>
                                }
                                else
                                {
                                    <td>@board.Reg_Date.ToString("MM-dd")</td>
                                }
                                <td>@board.Cnt_Read</td>
                            </tr>
                        }
                    </tbody>
                </table>
                @* 페이징 구현 *@
                <ul class="pagination float-right mt-3">
                    @{
                        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
                    }
                    <li class="page-item @prevDisabled">
                        <a class="page-link" tabindex="-1" asp-action="Index" asp-controller="Board" asp-route-currentPage="@(Model.CurrentPage - 1)" asp-route-Id="@category.Id">이전</a>
                    </li>
                    @{
                        var prevPageCount = Model.PageRimitCount / 2;
                        var nextPageCount = Model.PageRimitCount % 2 == 0 ? Model.PageRimitCount / 2 - 1 : Model.PageRimitCount / 2;

                        var minPage = 1;
                        var maxPage = Model.PageRimitCount < Model.Count ? Model.PageRimitCount : Model.Count;

                        if (Model.CurrentPage - prevPageCount > 1)
                        {
                            minPage = Model.CurrentPage + nextPageCount < Model.Count ? Model.CurrentPage - prevPageCount : Model.Count - Model.PageRimitCount + 1;
                            maxPage = Model.CurrentPage + nextPageCount < Model.Count ? Model.CurrentPage + nextPageCount : Model.Count;
                        }

                        for (int i = minPage; i <= maxPage; i++)
                        {
                            var pageActive = i == Model.CurrentPage ? "active" : "";
                            <li class="page-item @pageActive">
                                <a class="page-link" asp-action="Index" asp-controller="Board" asp-route-currentPage="@i" asp-route-Id="@category.Id">@i</a>
                            </li>
                        }
                    }
                    <li class="page-item @nextDisabled">
                        <a class="page-link" asp-action="Index" asp-controller="Board" asp-route-currentPage="@(Model.CurrentPage + 1)" asp-route-Id="@category.Id">다음</a>
                    </li>
                </ul>
            </div>
            <div class="row">
                <div class="col-12 mb-3 text-center">
                    <form class="d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100" id="searchForm" asp-action="Index" asp-controller="Board" method="get">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <div class="dropdown mb-4 show">
                                    <button type="button" class="btn btn-link dropdown-toggle border w-auto" id="searchDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">전체</button>
                                    <ul class="dropdown-menu animated--fade-in" id="searchType" aria-labelledby="searchDropdown" x-placement="bottom-start" style="position: absolute; will-change: transform; top: 0px; left: 0px; transform: translate3d(0px, 38px, 0px);">
                                        <li class="dropdown-item" data-value="All">전체</li>
                                        <li class="dropdown-item" data-value="Title">제목</li>
                                        <li class="dropdown-item" data-value="Content">내용</li>
                                        <li class="dropdown-item" data-value="Writer">글쓴이</li>
                                        <li class="dropdown-item" data-value="Comment">댓글</li>
                                        <li class="dropdown-item" data-value="FileName">첨부파일명</li>
                                    </ul>
                                </div>
                            </div>
                            <input type="text" class="d-none" name="Id" value="@category.Id" />
                            <input type="text" class="d-none" name="searchType" id="inputSearchType" value="All" />
                            <input type="text" class="form-control bg-light border-0" id="searchString" name="searchString" placeholder="검색하기" aria-label="Search" aria-describedby="basic-addon2" />
                            <div class="input-group-append d-inline">
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-search fa-sm d-inline"></i>
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>