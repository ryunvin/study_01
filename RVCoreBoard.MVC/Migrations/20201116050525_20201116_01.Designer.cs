// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RVCoreBoard.MVC.DataContext;

namespace RVCoreBoard.MVC.Migrations
{
    [DbContext(typeof(RVCoreBoardDBContext))]
    [Migration("20201116050525_20201116_01")]
    partial class _20201116_01
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("RVCoreBoard.MVC.Models.Attach", b =>
                {
                    b.Property<int>("ANo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BNo")
                        .HasColumnType("int");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("FileFullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FileSize")
                        .HasColumnType("int");

                    b.Property<DateTime>("Reg_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ANo");

                    b.HasIndex("BNo");

                    b.ToTable("Attachs");
                });

            modelBuilder.Entity("RVCoreBoard.MVC.Models.Board", b =>
                {
                    b.Property<int>("BNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Cnt_Read")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DataBNo")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsNoti")
                        .HasColumnType("bit");

                    b.Property<int>("NextBNo")
                        .HasColumnType("int");

                    b.Property<int>("PrevBNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("Reg_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("UNo")
                        .HasColumnType("int");

                    b.HasKey("BNo");

                    b.HasIndex("DataBNo");

                    b.HasIndex("Id");

                    b.HasIndex("UNo");

                    b.ToTable("Boards");
                });

            modelBuilder.Entity("RVCoreBoard.MVC.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Gid")
                        .HasColumnType("int");

                    b.Property<short>("Level")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("Reg_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Gid");

                    b.ToTable("Categorys");
                });

            modelBuilder.Entity("RVCoreBoard.MVC.Models.CategoryGroup", b =>
                {
                    b.Property<int>("Gid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Gname")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Gid");

                    b.ToTable("CatergoryGroups");
                });

            modelBuilder.Entity("RVCoreBoard.MVC.Models.Comment", b =>
                {
                    b.Property<int>("CNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BNo")
                        .HasColumnType("int");

                    b.Property<int?>("CommentCNo")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<bool>("IsNoti")
                        .HasColumnType("bit");

                    b.Property<int>("RecentCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Reg_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("UNo")
                        .HasColumnType("int");

                    b.HasKey("CNo");

                    b.HasIndex("BNo");

                    b.HasIndex("CommentCNo");

                    b.HasIndex("UNo");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("RVCoreBoard.MVC.Models.User", b =>
                {
                    b.Property<int>("UNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("Birth")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DataUNo")
                        .HasColumnType("int");

                    b.Property<string>("DetailAddress")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<short>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UNo");

                    b.HasIndex("DataUNo");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RVCoreBoard.MVC.Models.Attach", b =>
                {
                    b.HasOne("RVCoreBoard.MVC.Models.Board", "board")
                        .WithMany("AttachInfoList")
                        .HasForeignKey("BNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("board");
                });

            modelBuilder.Entity("RVCoreBoard.MVC.Models.Board", b =>
                {
                    b.HasOne("RVCoreBoard.MVC.Models.Board", "Data")
                        .WithMany()
                        .HasForeignKey("DataBNo");

                    b.HasOne("RVCoreBoard.MVC.Models.Category", "category")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RVCoreBoard.MVC.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("UNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");

                    b.Navigation("Data");

                    b.Navigation("user");
                });

            modelBuilder.Entity("RVCoreBoard.MVC.Models.Category", b =>
                {
                    b.HasOne("RVCoreBoard.MVC.Models.CategoryGroup", "categoryGroup")
                        .WithMany()
                        .HasForeignKey("Gid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categoryGroup");
                });

            modelBuilder.Entity("RVCoreBoard.MVC.Models.Comment", b =>
                {
                    b.HasOne("RVCoreBoard.MVC.Models.Board", "board")
                        .WithMany("CommentList")
                        .HasForeignKey("BNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RVCoreBoard.MVC.Models.Comment", null)
                        .WithMany("Data")
                        .HasForeignKey("CommentCNo");

                    b.HasOne("RVCoreBoard.MVC.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("UNo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("board");

                    b.Navigation("user");
                });

            modelBuilder.Entity("RVCoreBoard.MVC.Models.User", b =>
                {
                    b.HasOne("RVCoreBoard.MVC.Models.User", "Data")
                        .WithMany()
                        .HasForeignKey("DataUNo");

                    b.Navigation("Data");
                });

            modelBuilder.Entity("RVCoreBoard.MVC.Models.Board", b =>
                {
                    b.Navigation("AttachInfoList");

                    b.Navigation("CommentList");
                });

            modelBuilder.Entity("RVCoreBoard.MVC.Models.Comment", b =>
                {
                    b.Navigation("Data");
                });
#pragma warning restore 612, 618
        }
    }
}
